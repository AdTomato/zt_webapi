<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.authine.cloudpivot.web.api.mapper.SeasonAssessMapper">
    <resultMap id="avgResult" type="com.authine.cloudpivot.web.api.bean.AvgScore">
        <id property="deptEffectId" column="dept_effect_id"/>
        <result property="score" column="avg"/>
    </resultMap>
    <resultMap id="totalResult" type="com.authine.cloudpivot.web.api.bean.TotalScore">
        <id property="deptEffectId" column="id"/>
        <result property="score" column="total_score"/>
        <result property="department" column="dept_name"/>
    </resultMap>
    <insert id="saveScore" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        dept_season_voteinfo(assessment_year,assessment_season,dept_name_id,basic_score,handle_score,workarea_deduct,officialcontent_deduct,handle_deduct,total_score,dept_effect_id,user_id,user_name,dept_name,parentid)
        values
        <foreach collection="list" item="vote" index="index" separator=",">
            (#{vote.assessmentYear},#{vote.assessmentSeason},#{vote.deptNameId},#{vote.basicScore},#{vote.handleScore},#{vote.workareaDeduct},#{vote.officialcontentDeduct},#{vote.handleDeduct},#{vote.totalScore},#{vote.deptEffectId},#{vote.userId},#{vote.userName},#{vote.deptName},#{vote.parentId})
        </foreach>
    </insert>


    <update id="resetScore">
        UPDATE i6rlc_dept_effect SET basic_score = NULL where parentId = #{depteffectIds}
    </update>

    <select id="countAvg" resultMap="avgResult">
        select dept_effect_id,Round(AVG(basic_score),2) as avg from dept_season_voteinfo where parentid =#{id} GROUP BY dept_name_id
    </select>


    <update id="updateAvgScore" parameterType="com.authine.cloudpivot.web.api.bean.AvgScore">
        UPDATE i6rlc_dept_effect SET basic_score = #{score} where id = #{deptEffectId}
    </update>

    <select id="countTotal" resultMap="totalResult">
        select id,ROUND(basic_score*0.8+adminhandle_score*0.1+partyhandle_score*0.1,2) as total_score,
        dept_name FROM (select * FROM i6rlc_dept_effect where parentId = #{id}) b
    </select>

    <update id="updateTotalScore" parameterType="com.authine.cloudpivot.web.api.bean.TotalScore">
        UPDATE i6rlc_dept_effect SET total_score = #{score} where id = #{deptEffectId}
    </update>

    <select id="checkRepeat" resultType="java.lang.Integer">
        select count(*) from dept_season_voteinfo WHERE parentid = #{seasonassessmentId} AND user_id = #{userId}
    </select>
    <delete id="deleteWorkitemfinished">
        delete from biz_workitem_finished where instanceId = #{instanceid} and activityCode = 'Activity3'
    </delete>

    <insert id="insertDeptSeasonAssTables">
        INSERT INTO i6rlc_dept_perform_asselement
        (id,parentId,assess_content,assess_index,sortKey,score_criterion)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.id}, #{item.parentId}, #{item.assessContent}, #{item.assessIndex},
            #{item.sortKey},#{item.scoreCriterion})
        </foreach>
    </insert>

    <insert id="insertDeptSeasonEvaInfo">
        INSERT INTO dept_season_perform_evainfo
        (assessment_year, assessment_season, dept_name_id, user_id, merge_score, old_parent_id, dept_name)
        values (#{assessmentYear},#{assessmentSeason},#{deptNameId},#{userId},#{mergeScore},#{oldParentId},#{deptNameToString})
    </insert>

    <update id="updateBasicAvg">
        update i6rlc_dept_effect a
            INNER JOIN
            (SELECT old_parent_id,dept_name, Round(AVG(merge_score),2) as avg from dept_season_perform_evainfo where old_parent_id = #{oldParentId} and dept_name= #{deptNameToString}) c
            on a.parentId = c.old_parent_id
        set a.basic_score = c.avg
        where a.parentId= #{oldParentId} and a.dept_name= #{deptNameToString}
    </update>

    <update id="updateHandleScore">
        update  i6rlc_dept_effect set handle_score = #{mergeScore} where parentId = #{oldParentId} and dept_name= #{deptNameToString}
    </update>

    <update id="updatePartyHandleScore">
        update  i6rlc_dept_effect set partyhandle_score = #{mergeScore} where parentId = #{oldParentId} and dept_name= #{deptNameToString}
    </update>

    <select id="countDeptTotal" resultMap="totalResult">
        select id,ROUND(basic_score*0.8+handle_score*0.1+partyhandle_score*0.1,1) as total_score,dept_name FROM (select * FROM i6rlc_dept_effect where parentId = #{oldParentId} and dept_name = #{deptNameToString}) b
    </select>

</mapper>